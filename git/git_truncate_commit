#!/bin/bash

# Truncate commit all deletes commits made after a commit desired to keep
# It helps correct mistaken commit that pushes up credentials
# You can simply remove the offending commit

# Steps
# 1. Soft Reset to the commit desired
# 2. Force a push that sets new latest commit to the new HEAD - the SHA-1
# e.g: git push origin 7f18346ed74:task5 --force
# a. git reset 7f18346ed74 - I reset this SHA-1 because that's the last
# --- latest commit I desire to keep
# b. git add . && git commit -m "msg"
# c. git push origin 7f18346ed74:task5 --force
# NOTE: task5 is of course the branch name
# Done!
# Remove or modify the offending file, add, commit, and push seemlessly

# Ensure arguments 1
if [ -z "$1" ]; then
	echo "$(basename $0) SHA-1-to-keep"
	exit 1
fi
git reset "$1" # Soft reset
git push origin "$1":master --force
# If this step fails, then the correct files, add and commit first
# Then try again with the new SHA-1
