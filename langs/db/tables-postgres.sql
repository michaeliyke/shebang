CREATE TABLE IF NOT EXISTS users (
    id VARCHAR(60) NOT NULL PRIMARY KEY,
    username VARCHAR(255) DEFAULT NULL,
    password VARCHAR(255) DEFAULT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    first_name VARCHAR(255) DEFAULT NULL,
    last_name VARCHAR(255) DEFAULT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS bookmarks (
    id VARCHAR(60) NOT NULL PRIMARY KEY,
    title VARCHAR(255) DEFAULT NULL,
    url VARCHAR(1024) NOT NULL,
    description VARCHAR(1024) DEFAULT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS categories (
    id VARCHAR(60) NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    user_id VARCHAR(60) NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
CREATE TABLE IF NOT EXISTS tags (
    id VARCHAR(60) NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS category_tag (
    id VARCHAR(60) DEFAULT NULL,
    category_id VARCHAR(60),
    tag_id VARCHAR(60),
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (category_id, tag_id),
    FOREIGN KEY (category_id) REFERENCES categories(id),
    FOREIGN KEY (tag_id) REFERENCES tags(id)
);
CREATE TABLE IF NOT EXISTS category_bookmark (
    id VARCHAR(60) DEFAULT NULL,
    category_id VARCHAR(60),
    bookmark_id VARCHAR(60),
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (category_id, bookmark_id),
    FOREIGN KEY (category_id) REFERENCES categories(id),
    FOREIGN KEY (bookmark_id) REFERENCES bookmarks(id)
);
CREATE TABLE IF NOT EXISTS bookmark_tag (
    id VARCHAR(60) DEFAULT NULL,
    bookmark_id VARCHAR(60),
    tag_id VARCHAR(60),
    created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (bookmark_id, tag_id),
    FOREIGN KEY (bookmark_id) REFERENCES bookmarks(id),
    FOREIGN KEY (tag_id) REFERENCES tags(id)
);
DO $$ BEGIN IF NOT EXISTS (
    SELECT
    FROM pg_catalog.pg_roles
    WHERE rolname = 'BMM_db_user'
) THEN CREATE ROLE BMM_db_user LOGIN PASSWORD 'BMM_db_user_password';
END IF;
END $$;
GRANT SELECT,
    INSERT,
    UPDATE,
    DELETE ON DATABASE bmm TO BMM_db_user;
GRANT SELECT ON ALL TABLES IN SCHEMA performance_schema TO BMM_db_user;
/* Grant future privileges on new tables in performance_schema */
ALTER DEFAULT PRIVILEGES IN SCHEMA performance_schema
GRANT SELECT ON TABLES TO BMM_db_user;
